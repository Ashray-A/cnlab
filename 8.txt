SERVER

#include <stdio.h>
#include <stdlib.h>
#include <unistd.h> 
#include <sys/socket.h>
#include <netinet/in.h>

int main() {
    
    int sock = socket(AF_INET, SOCK_DGRAM, 0);
    
    
    struct sockaddr_in server_addr = {0};
    server_addr.sin_family = AF_INET;
    server_addr.sin_port = htons(8080);
    server_addr.sin_addr.s_addr = INADDR_ANY;
    
    bind(sock, (struct sockaddr*)&server_addr, sizeof(server_addr));
    
    
    FILE *file = fopen("received.txt", "wb");
    char buffer[1024];
    struct sockaddr_in client_addr;
    socklen_t addr_len = sizeof(client_addr);
    
    while (1) {
        int n = recvfrom(sock, buffer, 1024, 0, (struct sockaddr*)&client_addr, &addr_len);
        if (n <= 0) break;
        fwrite(buffer, 1, n, file);
    }
    
    fclose(file);
    close(sock);
    return 0;
}



CLIENT 


#include <stdio.h>
#include <stdlib.h>
#include <unistd.h> 
#include <sys/socket.h>
#include <netinet/in.h>
#include <arpa/inet.h>

int main() {
    
    int sock = socket(AF_INET, SOCK_DGRAM, 0);
    
    
    struct sockaddr_in server_addr = {0};
    server_addr.sin_family = AF_INET;
    server_addr.sin_port = htons(8080);
    inet_pton(AF_INET, "127.0.0.1", &server_addr.sin_addr);
    
    
    FILE *file = fopen("file.txt", "rb");
    char buffer[1024];
    int n;
    
    while ((n = fread(buffer, 1, 1024, file)) > 0) {
        sendto(sock, buffer, n, 0, (struct sockaddr*)&server_addr, sizeof(server_addr));
    }
    
    sendto(sock, buffer, 0, 0, (struct sockaddr*)&server_addr, sizeof(server_addr)); // End marker
    fclose(file);
    close(sock);
    return 0;
}