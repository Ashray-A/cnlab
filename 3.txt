#include <stdio.h>
#define N 10
#define INF 999

int d[N][N], nxt[N][N], cost[N][N], n;

void update() {
    int changed, i, j, k;
    do {
        changed = 0;
        for(i = 0; i < n; i++)
            for(j = 0; j < n; j++)
                for(k = 0; k < n; k++)
                    if(d[i][j] > d[i][k] + d[k][j]) {
                        d[i][j] = d[i][k] + d[k][j];
                        nxt[i][j] = nxt[i][k];
                        changed++;
                    }
    } while(changed);
}

int main() {
    printf("Nodes (3-6): "); scanf("%d", &n);
    
    printf("Cost matrix (INF=%d):\n", INF);
    for(int i = 0; i < n; i++)
        for(int j = 0; j < n; j++) {
            scanf("%d", &cost[i][j]);
            d[i][j] = cost[i][j];
            nxt[i][j] = (i == j || cost[i][j] == INF) ? -1 : j;
        }

    update();

    printf("\nFinal tables:\n");
    for(int i = 0; i < n; i++) {
        printf("\nRouter %c:\nDest\tNext\tDist\n", 'A'+i);
        for(int j = 0; j < n; j++)
            printf("%c\t%c\t%d\n", 'A'+j, 
                  (nxt[i][j] == -1) ? '-' : 'A'+nxt[i][j], d[i][j]);
    }
    return 0;
}


Output:
Nodes (3-6): 4
Cost matrix (INF=999):
0 3 5 999
3 0 999 2
5 999 0 4
999 2 4 0